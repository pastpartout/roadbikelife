/*
 * Image Scroller Plugin
 * http://www.viget.com/
 *
 * Copyright (c) 2010 Trevor Davis (http://trevordavis.net/)
 * Dual licensed under the MIT and GPL licenses.
 * Uses the same license as jQuery, see:
 * http://jquery.org/license
 *
 * @version 0.1
 */
;(function($) {
//Create a draggable interface to scroll over a larger image
    $.fn.imageScroller = function(options) {
        var opts = $.extend({}, $.fn.imageScroller.defaults, options);

        return this.each(function() {
            let $this = $(this),
                o = $.meta ? $.extend({}, opts, $this.data()) : opts,
                previewHeight = $this.height(),
                ratio = o.ratio,
                $wrapper = this;
            let $percentsInput = $(o.valueFieldSelector);
            let $percentsInputVal = parseInt($percentsInput.val());
            var $indicator = $('<span/>', {
                'class': 'indicator',
                css: {
                    top:0,
                }
            });

            indicatorHeight = $indicator.height();
            $indicator.appendTo($wrapper);

            if ($percentsInputVal > 0) {
                let newPosImg = (previewHeight - indicatorHeight) / 100 * $percentsInputVal;
                $indicator.css({'top': newPosImg + 'px'});
            }

            $wrapper.addEventListener("mousemove", function(e) {
                if(e.buttons==1)
                {
                    moveMarker($wrapper,e)
                }
            });

            $wrapper.addEventListener("touchmove", function(e) {
                moveMarker($wrapper,e)
            });

            $wrapper.addEventListener("touchstart", function(e) {
                moveMarker($wrapper,e)
            });

            function getOffsetPosition(evt, parent){
                var position = {
                    x: (evt.targetTouches) ? evt.targetTouches[0].pageX : evt.clientX,
                    y: (evt.targetTouches) ? evt.targetTouches[0].pageY : evt.clientY
                };

                while(parent.offsetParent){
                    position.x -= parent.offsetLeft - parent.scrollLeft;
                    position.y -= parent.offsetTop - parent.scrollTop;

                    parent = parent.offsetParent;
                }

                return position;
            }

            function moveMarker(el,e) {
                e.preventDefault();
                if(e.type) {
                    var relY = getOffsetPosition(e,el);
                    relY = relY.y;
                    var parentHeight = $(el).height();
                    var maxRelY = parentHeight - (indicatorHeight);
                    var maxRelY2 = parentHeight - (indicatorHeight / 2);
                    var topPercent = Math.round(100 / (maxRelY / relY));
                }

                if (relY >= 0 && relY <= maxRelY) {
                    $percentsInput.val(topPercent+'%');
                    $indicator.css({'top': relY + 'px'});
                    $($wrapper).find('img').css('object-position','center '+ topPercent + '%');
                }
            }



        });
    };

// default options
    $.fn.imageScroller.defaults = {
        ratio: 0.5,
        valueFieldSelector: 'input[name="com_fields[image-fulltext-position]"]',
    };

})(jQuery);
