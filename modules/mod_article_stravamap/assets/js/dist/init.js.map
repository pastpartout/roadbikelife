{"version":3,"sources":["init_flot.js","init_map.js"],"names":["start","locked","$flotmarker","$","wrapper","document","getElementById","wheatherInterval","rideDataInterval","flotOptions","xaxis","show","position","color","axisLabel","tickFormatter","kmFormat","axisLabelUseCanvas","axisLabelFontSizePixels","axisLabelFontFamily","axisLabelPadding","yaxes","grid","borderWidth","mouseActiveRadius","axisMargin","margin","series","curvedLines","active","markerInterval","getHighestValue","dataSet","sortable","Object","keys","forEach","key","push","parseInt","sort","a","b","v","axis","toFixed","tickDecimals","kmhFormat","mFormat","createGraph","selector","data","removeClass","dataset","points","symbol","fillColor","yaxis","shadowSize","lines","fill","lineWidth","apply","monotonicFit","plot","getAxes","options","max","replace","addEventListener","e","moveMarker","addClass","slideMarker","counter","getOffsetPosition","evt","parent","x","targetTouches","pageX","clientX","y","pageY","clientY","offsetParent","offsetLeft","scrollLeft","offsetTop","scrollTop","el","leftPercent","Markerlatlng","type","relX","parentWidth","width","latlngCount","map_data","coordinates","length","Math","floor","text","getSpeedDataPointValue","getWattsDataPointValue","getHeartrateDataPointValue","getElevationDataPointValue","getTempValue","wheather","getWindSpeedValue","toString","attr","getWheatherIcon","windSpeedValuePercent","getWindSpeedValuePercent","windSpeedProgressBar","windSpeedBearing","css","getWindBearingValue","window","markerPosition","setPosition","localStorage","setItem","left","startMarker","setInterval","stopMarker","clearInterval","graphs","distance","heartrate","watts","altitude","index","round","windSpeed","temp","windBearing","windspeedPercent","clear-day","clear-night","rain","snow","sleet","wind","fog","cloudy","partly-cloudy-day","partly-cloudy-night","01d","01n","02d","02n","03d","03n","04d","04n","09d","09n","10d","10n","11d","11n","13d","13","icon","graph_name","graph","on","this","hasClass","isOnScreen","elem","$window","jQuery","viewport_top","viewport_height","height","viewport_bottom","$elem","top","offset","bottom","zoomToObject","path","map","bounds","google","maps","LatLngBounds","getPath","getArray","n","extend","fitBounds","iosFullscreen","controlDiv","controlUI","createElement","style","backgroundColor","border","borderRadius","boxShadow","marginRight","marginTop","lineHeight","padding","cursor","fontSize","textAlign","appendChild","controlText","innerHTML","body","querySelector","mapWrapper","mapDiv","getBoundingClientRect","classList","toggle","contains","innerHeight","initMap","bindInfoWindow","marker","infoWindow","html","event","addListener","setContent","open","InfoWindow","isIOS","test","navigator","userAgent","Map","zoom","streetViewControl","fullscreenControl","styles","Joomla","gmap_styles_rbl_article","routeLine","Polyline","geometry","encoding","decodePath","map_polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","markerCoords","fullScreenControlDiv","add","controls","ControlPosition","TOP_RIGHT","Marker","draggable","url","scaledSize","Size","origin","Point","anchor","controlUIWrapper","marginBottom","marker_name","i","markers","indexOf","lat","lng","newCoords","point","newPointIndex","markerOnMap","setZoom","panTo","BOTTOM_CENTER","photos","photo","photoMarker","location","photoMarkerHtml","urls","segment_efforts","segment_effort","segmentLine","undefined","achievements","rankIcon","rank","segment","end_latlng","polyline","markerHtml","tooltip_content","preventDefault","stravaId","request","XMLHttpRequest","onload","status","JSON","parse","responseText","empty","console","log","map_wrapper","map_wrapper_offset","scroll_offset","iOS","platform","animate","scroll","behavior","onerror","send"],"mappings":"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","file":"init.js","sourcesContent":["\r\n    var start;\r\n    let locked = false;\r\n    let $flotmarker = $('.graphWrapper .marker');\r\n    let wrapper = document.getElementById(\"distance-graph\");\r\n    const wheatherInterval = 100;\r\n    const rideDataInterval = 1000;\r\n    const flotOptions = {\r\n\r\n        xaxis: {\r\n            show: false,\r\n            position: \"bottom\",\r\n            color: \"black\",\r\n            axisLabel: \"Distanz\",\r\n            tickFormatter: kmFormat,\r\n            axisLabelUseCanvas: true,\r\n            axisLabelFontSizePixels: 10,\r\n            axisLabelFontFamily: 'Verdana, Arial',\r\n            axisLabelPadding: 0,\r\n        },\r\n        yaxes: [{\r\n            show: false,\r\n        }],\r\n\r\n        grid: {\r\n            show: false,\r\n            borderWidth: 0,\r\n            mouseActiveRadius: 20,\r\n            axisMargin: 0,\r\n            margin: 0\r\n        },\r\n        series: {\r\n            curvedLines: {\r\n                active: true,\r\n            }\r\n        }\r\n    };\r\n    let markerInterval;\r\n\r\n    if (wrapper) {\r\n        function getHighestValue(dataSet) {\r\n            if (dataSet) {\r\n                var sortable = [];\r\n\r\n                Object.keys(dataSet).forEach(function (key) {\r\n                    sortable.push(parseInt(dataSet[key][1]))\r\n                });\r\n                sortable.sort(function (a, b) {\r\n                    return b - a\r\n                });\r\n                return sortable[0] * 1.1;\r\n            }\r\n\r\n        }\r\n\r\n        function kmFormat(v, axis) {\r\n            v = v / 1000;\r\n            return v.toFixed(axis.tickDecimals) + \" km\";\r\n        }\r\n\r\n        function kmhFormat(v, axis) {\r\n            v = v * 3.6;\r\n            return v.toFixed(axis.tickDecimals) + \" km/h\";\r\n        }\r\n\r\n        function mFormat(v, axis) {\r\n            v = v;\r\n            return v.toFixed(axis.tickDecimals) + \" m\";\r\n        }\r\n\r\n        function createGraph(selector, data, flotOptions) {\r\n            // if ($(selector).length) {\r\n            if (!data) {\r\n                $(\"a[data-graph-name='\" + selector + \"']\").addClass('d-none');\r\n            } else {\r\n                $(\"a[data-graph-name='\" + selector + \"']\").removeClass('d-none');\r\n                var dataset = [\r\n                    {\r\n                        data: data,\r\n                        points: {symbol: \"circle\", fillColor: \"#e51a51\", show: false},\r\n                        yaxis: 1,\r\n                        shadowSize: 0,\r\n                        color: '#e51a51',\r\n                        lines: {\r\n                            show: true,\r\n                            fill: false,\r\n                            lineWidth: 2,\r\n                            fillColor: '#ced4da'\r\n                        },\r\n                        curvedLines: {\r\n                            apply: true,\r\n                            monotonicFit: false\r\n                        }\r\n                    }\r\n                ];\r\n\r\n                var flot = $.plot(selector, dataset, flotOptions);\r\n                flot.getAxes().yaxis.options.max = getHighestValue(data);\r\n\r\n                // make scroll/touch listeners\r\n                let wrapper = document.getElementById(selector.replace('#', ''));\r\n                wrapper.addEventListener(\"mousemove\", function (e) {\r\n                    if (locked === false) {\r\n                        moveMarker(wrapper, e)\r\n                    }\r\n                });\r\n\r\n                wrapper.addEventListener(\"touchmove\", function (e) {\r\n                    moveMarker(wrapper, e)\r\n                });\r\n\r\n                wrapper.addEventListener(\"touchstart\", function (e) {\r\n                    moveMarker(wrapper, e)\r\n                });\r\n\r\n                wrapper.addEventListener(\"mousedown\", function (e) {\r\n                    if (locked === true) {\r\n                        moveMarker(wrapper, e)\r\n                    }\r\n                    locked = !locked;\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n\r\n        function slideMarker() {\r\n            let counter = start || 0.1;\r\n            let wrapper = document.getElementById(\"altitude-graph\");\r\n            counter = counter + 0.1;\r\n            if (counter > 99.9) {\r\n                counter = 0.1;\r\n\r\n            }\r\n            start = counter;\r\n            moveMarker(wrapper, counter);\r\n        }\r\n\r\n        function getOffsetPosition(evt, parent) {\r\n            var position = {\r\n                x: (evt.targetTouches) ? evt.targetTouches[0].pageX : evt.clientX,\r\n                y: (evt.targetTouches) ? evt.targetTouches[0].pageY : evt.clientY\r\n            };\r\n\r\n            while (parent.offsetParent) {\r\n                position.x -= parent.offsetLeft - parent.scrollLeft;\r\n                position.y -= parent.offsetTop - parent.scrollTop;\r\n\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return position;\r\n        }\r\n\r\n\r\n        function moveMarker(el, e) {\r\n\r\n            let $flotmarker = $('.graphWrapper .marker');\r\n\r\n            if (e.type) {\r\n                var relX = getOffsetPosition(e, el);\r\n                relX = relX.x;\r\n                var parentWidth = $(el).width();\r\n                var latlngCount = map_data.coordinates.length;\r\n                var leftPercent = 100 / (parentWidth / relX);\r\n                var Markerlatlng = map_data.coordinates[Math.floor((latlngCount / 100) * leftPercent)];\r\n                start = leftPercent;\r\n            } else {\r\n                leftPercent = e;\r\n                var latlngCount = map_data.coordinates.length;\r\n                var Markerlatlng = map_data.coordinates[Math.floor((latlngCount / 100) * leftPercent)];\r\n            }\r\n\r\n            if (leftPercent > 0 && leftPercent <= 100) {\r\n                $('.detailNumbers .distance').text(getSpeedDataPointValue(leftPercent));\r\n                $('.detailNumbers .watts').text(getWattsDataPointValue(leftPercent));\r\n                $('.detailNumbers .heartrate').text(getHeartrateDataPointValue(leftPercent));\r\n                $('.detailNumbers .altitude').text(getElevationDataPointValue(leftPercent));\r\n                $('.windInfo .temp > span ').text(getTempValue(leftPercent));\r\n                if (map_data.wheather) {\r\n                    $('#wheather .wind .windInfo .windSpeed').text(getWindSpeedValue(leftPercent).toString().replace(/[.]/, \",\"));\r\n                    $('#wheatherIcon').attr('class', 'fal py-1 ' + getWheatherIcon(leftPercent));\r\n                }\r\n\r\n                let windSpeedValuePercent = getWindSpeedValuePercent(leftPercent);\r\n                let windSpeedProgressBar = $('#wheather .wind .windInfo .progress-bar');\r\n                let windSpeedBearing = $('#wheather .wind .windBearing');\r\n\r\n                windSpeedProgressBar.css('height', windSpeedValuePercent + '%');\r\n                $('#wheather .wind .windBearing i').css('transform', 'rotate(' + getWindBearingValue(leftPercent));\r\n\r\n                if (windSpeedValuePercent > 0) {\r\n                    windSpeedBearing.attr('class', 'windBearing text-success');\r\n                    windSpeedProgressBar.attr('class', 'progress-bar bg-success');\r\n                }\r\n                if (windSpeedValuePercent > 25) {\r\n                    windSpeedBearing.attr('class', 'windBearing text-info');\r\n                    windSpeedProgressBar.attr('class', 'progress-bar bg-info');\r\n                }\r\n                if (windSpeedValuePercent > 50) {\r\n                    windSpeedBearing.attr('class', 'windBearing text-warning');\r\n                    windSpeedProgressBar.attr('class', 'progress-bar bg-warning');\r\n                }\r\n                if (windSpeedValuePercent > 75) {\r\n                    windSpeedBearing.attr('class', 'windBearing text-danger');\r\n                    windSpeedProgressBar.attr('class', 'progress-bar bg-danger');\r\n                }\r\n\r\n\r\n                window.markerPosition.setPosition(Markerlatlng);\r\n                localStorage.setItem('stravaMapMarkerPos', leftPercent);\r\n                $flotmarker.css({'left': leftPercent + '%'});\r\n            }\r\n        }\r\n\r\n        function startMarker() {\r\n            markerInterval = setInterval(slideMarker, 200);\r\n            $('a.pause').removeClass('active');\r\n            $('a.play').addClass('active');\r\n        }\r\n\r\n        function stopMarker() {\r\n            clearInterval(markerInterval);\r\n            $('a.play').removeClass('active');\r\n            $('a.pause').addClass('active');\r\n        }\r\n\r\n        function getSpeedDataPointValue(leftPercent) {\r\n            let data = map_data.graphs.distance\r\n            if (data.length > 0) {\r\n                return Math.floor((data[Math.floor((data.length / 100) * leftPercent)][1]) * 3.6);\r\n            }\r\n        }\r\n\r\n        function getHeartrateDataPointValue(leftPercent) {\r\n            let data = map_data.graphs.heartrate;\r\n            if (data.length > 0) {\r\n                return Math.floor((data[Math.floor((data.length / 100) * leftPercent)][1]));\r\n            }\r\n        }\r\n\r\n        function getWattsDataPointValue(leftPercent) {\r\n            let data = map_data.graphs.watts;\r\n            if (data.length > 0) {\r\n                return Math.floor((data[Math.floor((data.length / 100) * leftPercent)][1]));\r\n            }\r\n        }\r\n\r\n        function getElevationDataPointValue(leftPercent) {\r\n            let data = map_data.graphs.altitude;\r\n            if (data) {\r\n                return Math.floor((data[Math.floor((data.length / 100) * leftPercent)][1]));\r\n            }\r\n        }\r\n\r\n\r\n        function getWindSpeedValue(leftPercent) {\r\n            if (map_data.wheather.length > 0) {\r\n                let index = Math.floor((map_data.wheather.length / 100) * leftPercent);\r\n                return Math.round(map_data.wheather[index].windSpeed * 10) / 10;\r\n            }\r\n        }\r\n\r\n        function getTempValue(leftPercent) {\r\n            if (map_data.temp.length > 0) {\r\n                let index = Math.floor((map_data.temp.length / 100) * leftPercent);\r\n                return map_data.temp[index];\r\n            }\r\n        }\r\n\r\n\r\n        function getWindBearingValue(leftPercent) {\r\n            if (map_data.wheather.length > 0) {\r\n                let index = Math.floor((map_data.wheather.length / 100) * leftPercent);\r\n                return map_data.wheather[index].windBearing + 180 + 'deg';\r\n            }\r\n        }\r\n\r\n        function getWindSpeedValuePercent(leftPercent) {\r\n            if (map_data.wheather.length > 0) {\r\n                let index = Math.floor((map_data.wheather.length / 100) * leftPercent);\r\n                let windspeed = map_data.wheather[index].windSpeed;\r\n                let windspeedMax = 30;\r\n                let windspeedPercent = windspeed / windspeedMax * 100;\r\n                return Math.floor(windspeedPercent);\r\n            }\r\n        }\r\n\r\n        function getWheatherIcon(leftPercent) {\r\n            if (map_data.wheather.length > 0) {\r\n                let index = Math.floor((map_data.wheather.length / 100) * leftPercent);\r\n                let icon = map_data.wheather[index].icon;\r\n                let iconsMap = {\r\n                    'clear-day': 'fa-sun',\r\n                    'clear-night': 'fa-moon',\r\n                    'rain': 'fa-cloud-rain',\r\n                    'snow': 'fa-cloud-snow',\r\n                    'sleet': 'fa-cloud-sleet',\r\n                    'wind': 'fa-wind',\r\n                    'fog': 'fa-fog',\r\n                    'cloudy': 'fa-clouds',\r\n                    'partly-cloudy-day': 'fa-clouds-sun',\r\n                    'partly-cloudy-night': 'fa-clouds-moon',\r\n                    '01d': 'fa-sun',\r\n                    '01n': 'fa-sun',\r\n                    '02d': 'fa-clouds-sun',\r\n                    '02n': 'fa-clouds-sun',\r\n                    '03d': 'fa-cloud',\r\n                    '03n': 'fa-cloud',\r\n                    '04d': 'fa-clouds',\r\n                    '04n': 'fa-clouds',\r\n                    '09d': 'fa-cloud-showers',\r\n                    '09n': 'fa-cloud-showers',\r\n                    '10d': 'fa-cloud-rain',\r\n                    '10n': 'fa-cloud-rain',\r\n                    '11d': 'fa-thunderstorm',\r\n                    '11n': 'fa-thunderstorm',\r\n                    '13d': 'fa-fog',\r\n                    '13': 'fa-fog'\r\n                };\r\n\r\n                return iconsMap[icon];\r\n\r\n            }\r\n        }\r\n\r\n        // create graphs\r\n        for (let graph_name in map_data.graphs) {\r\n            let graph = map_data.graphs[graph_name];\r\n            createGraph('#' + graph_name + '-graph', graph, flotOptions);\r\n        }\r\n\r\n\r\n        $('.stravaGraph').on('touchstart mouseenter', function () {\r\n            stopMarker();\r\n        });\r\n\r\n        $('a.play').on('click', function () {\r\n            locked = false;\r\n            if (!$(this).hasClass('active')) {\r\n                startMarker();\r\n            }\r\n        });\r\n\r\n        $('a.pause').on('click', function () {\r\n            stopMarker();\r\n        });\r\n\r\n    }\r\n\r\n    // if($(window).width() > 480) {\r\n    //     initMap(map_data);\r\n    //     startMarker();\r\n    //\r\n    // } else {\r\n\r\n    // }\r\n    // Change Action\r\n\r\n    $('body').on('click', 'a.changeMap:not(.disabled)', function (e) {\r\n        e.preventDefault();\r\n        var url = $(this).attr('data-href');\r\n        var stravaId = $(this).attr('data-strava-id');\r\n\r\n        $('.activities a.disabled').removeClass('disabled');\r\n        $('aside').addClass('loading');\r\n        $(this).addClass('disabled');\r\n        $(\".postInfos-strava-inner[data-strava-id='\" + stravaId + \"']\").addClass('d-flex');\r\n\r\n        var request = new XMLHttpRequest();\r\n        request.open('GET', url, true);\r\n        request.onload = function () {\r\n            if (request.status >= 200 && request.status < 400) {\r\n                // Success!\r\n                map_data = JSON.parse(request.responseText);\r\n                initMap(map_data);\r\n\r\n                for (let graph_name in map_data.graphs) {\r\n                    let graph = map_data.graphs[graph_name];\r\n                    $('#' + graph_name + '-graph').empty();\r\n                    createGraph('#' + graph_name + '-graph', graph, flotOptions);\r\n                }\r\n\r\n                $(\".postInfos-strava-inner[data-strava-id='\" + stravaId + \"']\").removeClass('d-none');\r\n                $(\".postInfos-strava-inner[data-strava-id='\" + stravaId + \"']\").addClass('d-flex');\r\n\r\n                $(\".postInfos-strava-inner[data-strava-id!='\" + stravaId + \"']\").addClass('d-none');\r\n                $(\".postInfos-strava-inner[data-strava-id!='\" + stravaId + \"']\").removeClass('d-flex');\r\n\r\n                $('#btn-gpxdownload').attr('href', window.location.origin + '/component/roadbikelife/gpxdownload/' + stravaId);\r\n                $('.strava-link').attr('href', 'http://www.strava.com/activities/' + stravaId);\r\n\r\n\r\n                $('aside').removeClass('loading');\r\n            } else {\r\n                console.log('error loading data');\r\n                $('aside').removeClass('loading');\r\n\r\n            }\r\n\r\n            map_wrapper = $('#map-wrapper');\r\n            map_wrapper_offset = map_wrapper.offset();\r\n            scroll_offset = map_wrapper_offset.top - (($(window).innerHeight() - map_wrapper.height()) / 2);\r\n            var iOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\r\n\r\n            if ($(window).width() < 480) {\r\n                if (iOS) {\r\n                    $('body,html').animate({\r\n                        scrollTop: scroll_offset\r\n                    });\r\n                } else {\r\n                    window.scroll({\r\n                        top: scroll_offset,\r\n                        left: 0,\r\n                        behavior: 'smooth'\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        request.onerror = function () {\r\n            // There was a connection error of some sort\r\n        };\r\n        request.send();\r\n    })\r\n\r\n\r\n\r\n","function isOnScreen(elem) {\r\n    // if the element doesn't exist, abort\r\n    if( elem.length == 0 ) {\r\n        return;\r\n    }\r\n    var $window = jQuery(window)\r\n    var viewport_top = $window.scrollTop()\r\n    var viewport_height = $window.height()\r\n    var viewport_bottom = viewport_top + viewport_height\r\n    var $elem = jQuery(elem)\r\n    var top = $elem.offset().top\r\n    var height = $elem.height()\r\n    var bottom = top + height\r\n\r\n    return (top >= viewport_top && top < viewport_bottom) ||\r\n        (bottom > viewport_top && bottom <= viewport_bottom) ||\r\n        (height > viewport_height && top <= viewport_top && bottom >= viewport_bottom)\r\n}\r\n\r\nfunction zoomToObject(path, map) {\r\n    var bounds = new google.maps.LatLngBounds();\r\n    var points = path.getPath().getArray();\r\n    for (var n = 0; n < points.length; n++) {\r\n        bounds.extend(points[n]);\r\n    }\r\n    map.fitBounds(bounds);\r\n}\r\n\r\n\r\nfunction iosFullscreen(controlDiv, map) {\r\n// Set CSS for the control border.\r\n    const controlUI = document.createElement(\"div\");\r\n    controlUI.style.backgroundColor = \"#fff\";\r\n    controlUI.style.border = \"2px solid #fff\";\r\n    controlUI.style.borderRadius = \"3px\";\r\n    controlUI.style.boxShadow = \"0 2px 6px rgba(0,0,0,.3)\";\r\n    controlUI.style.marginRight = \"10px\";\r\n    controlUI.style.marginTop = \"10px\";\r\n    controlUI.style.lineHeight = \"1\";\r\n    controlUI.style.height = \"40px\";\r\n    controlUI.style.padding = \"8px 8px 7px\";\r\n    controlUI.style.cursor = \"pointer\";\r\n    controlUI.style.fontSize = \"22px\";\r\n    controlUI.style.color = \"#666\";\r\n    controlUI.style.textAlign = \"center\";\r\n\r\n    controlDiv.appendChild(controlUI);\r\n\r\n    // Set CSS for the control interior.\r\n    const controlText = document.createElement(\"div\");\r\n    controlUI.innerHTML = \"<i class='fal fa-expand'></i>\";\r\n\r\n    controlUI.appendChild(controlText);\r\n\r\n    var body = document.querySelector('body');\r\n    var mapWrapper = document.getElementById('map-wrapper');\r\n    var mapDiv = document.getElementById('googlemap');\r\n    var screenPositionmapWrapper = mapWrapper.getBoundingClientRect();\r\n    // Setup the click event listeners: simply set the map to Chicago.\r\n    controlUI.addEventListener(\"click\", () => {\r\n        mapWrapper.classList.toggle(\"fullscreen\");\r\n        body.classList.toggle(\"gmap-fullscreen\");\r\n\r\n        if (!body.classList.contains('gmap-fullscreen')) {\r\n            mapWrapper.style.height = null\r\n            mapDiv.style.height = null\r\n        } else {\r\n            mapWrapper.style.height = window.innerHeight + 'px';\r\n            mapDiv.style.height = window.innerHeight + 'px';\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n}\r\n\r\nfunction initMap(data) {\r\n\r\n    function bindInfoWindow(marker, map, infoWindow, html) {\r\n        google.maps.event.addListener(marker, 'click', function () {\r\n            infoWindow.setContent(html);\r\n            infoWindow.open(map, marker);\r\n        });\r\n    }\r\n    var infoWindow = new google.maps.InfoWindow();\r\n    var markersOnMap = [];\r\n    var isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n    var map = new google.maps.Map(document.getElementById('googlemap'), {\r\n        zoom: 4,\r\n        streetViewControl: false,\r\n        fullscreenControl: !isIOS,\r\n        styles: Joomla.gmap_styles_rbl_article\r\n    });\r\n\r\n\r\n    var routeLine = new google.maps.Polyline({\r\n        path: google.maps.geometry.encoding.decodePath(data.map_polyline),\r\n        geodesic: true,\r\n        strokeColor: '#981539',\r\n        strokeOpacity: 1.0,\r\n        strokeWeight: 2,\r\n        map: map,\r\n\r\n    });\r\n    var activeInfoWindow = false;\r\n    var infowindows = {};\r\n    var markerCoords = [];\r\n\r\n    if (isIOS === true) {\r\n        const fullScreenControlDiv = document.createElement(\"div\");\r\n        fullScreenControlDiv.classList.add('btn-fullscreen');\r\n        iosFullscreen(fullScreenControlDiv, map);\r\n        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(fullScreenControlDiv);\r\n    }\r\n\r\n    window.markerPosition = new google.maps.Marker({\r\n        map: map,\r\n        draggable: false,\r\n        icon: {\r\n            url: 'https://www.roadbikelife.de/images/map_markers/map_markers_position.svg?v6',\r\n            scaledSize: new google.maps.Size(20, 20), // scaled size\r\n            origin: new google.maps.Point(0, 0), // origin\r\n            anchor: new google.maps.Point(10, 10) // anchor\r\n        }\r\n    });\r\n\r\n    let markerHtml = '<span class=\"stravaMapValueWrapper\">Keep rollin\\', rollin\\', rollin\\'</span>';\r\n    bindInfoWindow(window.markerPosition, map, infoWindow, markerHtml);\r\n\r\n    // start marker\r\n    var markerStart = new google.maps.Marker({\r\n        position: data.coordinates[0],\r\n        map: map,\r\n        draggable: false,\r\n        icon: {\r\n            url: 'https://www.roadbikelife.de/images/map_markers/map_markers_start.svg',\r\n            scaledSize: new google.maps.Size(30, 30), // scaled size\r\n            origin: new google.maps.Point(0, 0), // origin\r\n            anchor: new google.maps.Point(15, 15) // anchor\r\n        }\r\n    });\r\n\r\n    var markerEnd = new google.maps.Marker({\r\n        position: data.coordinates[data.coordinates.length - 1],\r\n        map: map,\r\n        draggable: false,\r\n        icon: {\r\n            url: 'https://www.roadbikelife.de/images/map_markers/map_markers_end.svg?v6',\r\n            scaledSize: new google.maps.Size(30, 30), // scaled size\r\n            origin: new google.maps.Point(0, 0), // origin\r\n            anchor: new google.maps.Point(15, 15) // anchor\r\n        }\r\n    });\r\n\r\n    let controlUIWrapper = document.createElement(\"div\");\r\n    controlUIWrapper.classList.add('btn-group');\r\n    controlUIWrapper.classList.add('btn-group-marker-btns');\r\n    controlUIWrapper.style.marginBottom = \"25px\";\r\n\r\n    let controlUI = document.createElement(\"div\");\r\n    controlUI.classList.add('btn');\r\n    controlUI.classList.add('btn-marker');\r\n    controlUI.classList.add('btn-marker-zoom-out');\r\n    controlUI.style.cursor = \"pointer\";\r\n\r\n\r\n    // Set CSS for the control interior.\r\n    let controlText = document.createElement(\"div\");\r\n    controlUI.innerHTML = \"<i class='fa fa-search-minus'></i>\";\r\n    controlUI.appendChild(controlText);\r\n    controlUIWrapper.appendChild(controlUI);\r\n\r\n    // Setup the click event listeners: simply set the map to Chicago.\r\n    controlUI.addEventListener(\"click\", () => {\r\n        zoomToObject(routeLine, map);\r\n    });\r\n\r\n\r\n    let i = 0;\r\n    for (let marker_name in data.markers) {\r\n        let marker = data.markers[marker_name];\r\n\r\n        if (typeof marker.coordinates !== 'undefined') {\r\n            // move marker one point ahead if its on same position\r\n            if (markerCoords.indexOf(marker.coordinates.lat + ',' + marker.coordinates.lng) >= 0) {\r\n\r\n                for (let index in data.coordinates) {\r\n                    let point = data.coordinates[index];\r\n                    // debugger;\r\n                    if (point.lat == marker.coordinates.lat && point.lng == marker.coordinates.lng) {\r\n                        let newPointIndex = parseInt(index) + 1;\r\n                        var newCoords = data.coordinates[newPointIndex];\r\n                    }\r\n                }\r\n\r\n                if (typeof (newCoords) !== 'undefined') {\r\n                    marker.coordinates = newCoords;\r\n                }\r\n\r\n            } else {\r\n                markerCoords.push(marker.coordinates.lat + ',' + marker.coordinates.lng);\r\n            }\r\n\r\n            let markerOnMap = new google.maps.Marker({\r\n                position: marker.coordinates,\r\n                map: map,\r\n                draggable: false,\r\n                icon: {\r\n                    url: 'https://www.roadbikelife.de/images/map_markers/map_markers_' + marker_name + '.svg?v6',\r\n                    scaledSize: new google.maps.Size(30, 30), // scaled size\r\n                    origin: new google.maps.Point(0, 0), // origin\r\n                    anchor: new google.maps.Point(15, 15) // anchor\r\n                }\r\n            });\r\n            bindInfoWindow(markerOnMap, map, infoWindow, marker.text);\r\n\r\n            let controlUI = document.createElement(\"div\");\r\n            controlUI.classList.add('btn');\r\n            controlUI.classList.add('btn-marker');\r\n            controlUI.classList.add('btn-marker-' + marker_name);\r\n\r\n\r\n            // Set CSS for the control interior.\r\n            let controlText = document.createElement(\"div\");\r\n            controlUI.innerHTML = \"<img src='https://www.roadbikelife.de/images/map_markers/map_markers_\" + marker_name + \".svg?v6'/>\";\r\n            controlUI.appendChild(controlText);\r\n            controlUIWrapper.appendChild(controlUI);\r\n\r\n\r\n\r\n            // Setup the click event listeners: simply set the map to Chicago.\r\n            controlUI.addEventListener(\"click\", function() {\r\n                map.setZoom(13);\r\n                map.panTo(marker.coordinates);\r\n                infoWindow.setContent(marker.text);\r\n                infoWindow.open(map,markerOnMap);\r\n                infoWindow.setPosition(marker.coordinates);\r\n            });\r\n            i++;\r\n        }\r\n    }\r\n\r\n    map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(controlUIWrapper);\r\n\r\n\r\n    data.photos.forEach(photo => {\r\n            if (photo.location) {\r\n                var photoMarker = new google.maps.Marker({\r\n                    position: {\r\n                        'lat': photo.location[0],\r\n                        'lng': photo.location[1],\r\n                    },\r\n                    map: map,\r\n                    draggable: false,\r\n                    icon: {\r\n                        url: 'https://www.roadbikelife.de/images/map_markers/map_markers_photo.svg?v3',\r\n                        scaledSize: new google.maps.Size(30, 30), // scaled size\r\n                        origin: new google.maps.Point(0, 0), // origin\r\n                        anchor: new google.maps.Point(15, 15) // anchor\r\n                    }\r\n                })\r\n\r\n                let photoMarkerHtml = '<a href=\"' + photo.urls[1000] + '\" data-fancybox=\"gmapsAcitivityImages\"><img src=\"' + photo.urls[250] + '\" class=\"acitvityMapPhoto\"></a>';\r\n                bindInfoWindow(photoMarker, map, infoWindow, photoMarkerHtml);\r\n\r\n            }\r\n\r\n        }\r\n    );\r\n\r\n    if (data.segment_efforts) {\r\n\r\n        data.segment_efforts.forEach(segment_effort => {\r\n                if (segment_effort.achievements[0] !== undefined) {\r\n\r\n                    let rank = segment_effort.achievements[0].rank;\r\n                    if (rank === 1) {\r\n                        var rankIcon = 'map_markers_rank_' + rank + '.svg';\r\n                    } else {\r\n                        var rankIcon = 'map_markers_rank_x.svg';\r\n                    }\r\n\r\n                    var marker = new google.maps.Marker({\r\n                        position: {\r\n                            'lat': segment_effort.segment.end_latlng[0],\r\n                            'lng': segment_effort.segment.end_latlng[1],\r\n                        },\r\n                        map: map,\r\n                        draggable: false,\r\n                        icon: {\r\n                            url: 'https://www.roadbikelife.de/images/map_markers/' + rankIcon,\r\n                            scaledSize: new google.maps.Size(30, 30), // scaled size\r\n                            origin: new google.maps.Point(0, 0), // origin\r\n                            anchor: new google.maps.Point(15, 15) // anchor\r\n                        }\r\n                    })\r\n\r\n                    let segmentLine = new google.maps.Polyline({\r\n                        path: google.maps.geometry.encoding.decodePath(segment_effort.segment.map.polyline),\r\n                        geodesic: true,\r\n                        strokeColor: '#f5cd5e',\r\n                        strokeOpacity: 1.0,\r\n                        strokeWeight: 4.2,\r\n                        map: map,\r\n                        position:\r\n                            {\r\n                                'lat': segment_effort.segment.end_latlng[0],\r\n                                'lng': segment_effort.segment.end_latlng[1],\r\n                            }\r\n                    });\r\n\r\n                    let markerHtml = '<span class=\"stravaMapValueWrapper\">' + segment_effort.tooltip_content + '</span>';\r\n                    bindInfoWindow(marker, map, infoWindow, markerHtml);\r\n                    bindInfoWindow(segmentLine, map, infoWindow, markerHtml);\r\n\r\n                }\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    zoomToObject(routeLine, map);\r\n\r\n}\r\n\r\n\r\n"]}